#pragma checksum "C:\Users\ponch\projects\LibreriaAlvarez\LibreriaAlvarez.WebApp\Pages\ListaPrecios - Copia.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eca06be7770377fa2b7907626f100232811f81b9"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LibreriaAlvarez.WebApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using LibreriaAlvarez.WebApp.Shared;
    using LibreriaAlvarez.WebApp;
    using OfficeOpenXml;
    using FileLib;
    using System.Drawing;
    using LibreriaAlvarez.WebApp.Services;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/fetch-prices")]
    public class ListaPrecios___Copia : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 66 "C:\Users\ponch\projects\LibreriaAlvarez\LibreriaAlvarez.WebApp\Pages\ListaPrecios - Copia.cshtml"
            
    LibreriaPrice[] precios;

    IEnumerable<LibreriaPrice> topPrecios;

    string searchCriteria = "";
    string searchCriteriaList = "";
    int total = 0;

    void OnChangeSearchCriteria(UIChangeEventArgs arg)
    {
        searchCriteria = arg.Value.ToString().ToUpper();
    }

    void OnChangeListSearch(UIChangeEventArgs arg)
    {
        searchCriteriaList = arg.Value.ToString().ToUpper();
    }

    protected override async Task OnInitAsync()
    {
        precios = await LibreriaPriceservice.GetPricesAsync().ConfigureAwait(false);

        topPrecios = await Task.Run(() => (from p in precios where p.Desc.Contains(searchCriteria) && p.Lista.Contains(searchCriteriaList) select p).Take(20)).ConfigureAwait(false);

        total = precios.Length;
    }

    protected async Task DownLoadExcel()
    {
        await Task.Run(async () =>
        {
            using (var package = new ExcelPackage())
            {

                var worksheet = package.Workbook.Worksheets.Add("Lista Precios");
                worksheet.DefaultColWidth = 25;

                //Aumentar tamaño de la columna descripción
                worksheet.Column(2).Width = 50;

                var header = worksheet.Cells["B1:F1"];
                header.Style.Font.Bold = true;
                header.Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                header.Style.Font.Color.SetColor(Color.White);
                header.Style.Fill.BackgroundColor.SetColor(Color.DarkBlue);


                header.Style.Border.Bottom.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thick;
                header.Style.Border.Top.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thick;
                header.Style.Border.Left.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thick;
                header.Style.Border.Right.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thick;

                worksheet.Cells["B1"].Value = "Descripción";
                worksheet.Cells["C1"].Value = "Lista";
                worksheet.Cells["D1"].Value = "Codigo";
                worksheet.Cells["E1"].Value = "Precio";
                worksheet.Cells["F1"].Value = "Fecha";

                var tableBody = worksheet.Cells["B2:B2"].LoadFromCollection(
                    from p in precios
                    select new { p.Desc, p.Lista, p.Code, p.Price, p.Fecha }, false);

                tableBody.Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;
                tableBody.Style.Fill.BackgroundColor.SetColor(Color.WhiteSmoke);

                tableBody.Style.Border.Bottom.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thin;
                tableBody.Style.Border.Top.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thin;
                tableBody.Style.Border.Left.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thin;
                tableBody.Style.Border.Right.Style = OfficeOpenXml.Style.ExcelBorderStyle.Thin;

                tableBody.Style.Border.BorderAround(OfficeOpenXml.Style.ExcelBorderStyle.Medium);

                // formato del tipo de fecha
                var fechasCol = tableBody.Offset(0, 4, precios.Length, 1);
                fechasCol.Style.Numberformat.Format = "DDD d MMM yyyy";

                // formato del tipo de precio
                var precioCol = tableBody.Offset(0, 3, precios.Length, 1);
                precioCol.Style.Numberformat.Format = "$###,###,##0.00";

                await FileUtil.SaveAs("PreciosLibreria.xlsx", package.GetAsByteArray()).ConfigureAwait(false);
            }
        }).ConfigureAwait(false);
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private LibreriaPriceService LibreriaPriceservice { get; set; }
    }
}
#pragma warning restore 1591
